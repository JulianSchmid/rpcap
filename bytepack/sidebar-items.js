initSidebarItems({"trait":[["BEPacker","Provides the same API and functionnality as `Packer` but ensure that the data is in big endian format. See `Packer` for more  documentation."],["BEUnpacker","Provides the same API and functionnality as `Unpacker` but ensure that the data is in big endian format. See `Unpacker` for more  documentation."],["LEPacker","Provides the same API and functionnality as `Packer` but ensure that the data is in little endian format. See `Packer` for more  documentation."],["LEUnpacker","Provides the same API and functionnality as `Unpacker` but ensure that the data is in little endian format. See `Unpacker` for more  documentation."],["Packed","This trait both identifies a type which holds his data packed together in memory and a type which offers a `switch_endianness` method. This trait is voluntarily not implemented for  `isize` and `usize` because their size can vary from one system to another."],["Packer","`Packer` provides the `std::io::Write` API but for any type `T` implementing `Packed`. It does not perform any endianness conversion and thus always  writes data using the system endianness."],["Unpacker","`Unpacker` provides the `std::io::Read` API but for any type `T` implementing `Packed`. It does not perform any endianness conversion and thus always  reads data using the system endianness."]]});